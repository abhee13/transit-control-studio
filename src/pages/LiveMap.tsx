import React from "react"; import { MapContainer, TileLayer, CircleMarker, Tooltip, Polyline } from "react-leaflet"; import "leaflet/dist/leaflet.css"; import { useAppStore } from "../store/useAppStore"; import { vehicles, routes, polylines } from "../data/mock";
const DALLAS:[number,number]=[32.7767,-96.7970];
function statusColor(s:string){return s==="on-time"?"#16a34a":s==="late"?"#f59e0b":s==="off-route"?"#ef4444":"#2f80ed";}
export default function LiveMap(){ const {selectedRoutes,mode}=useAppStore(); const activeRoutes=selectedRoutes.length?selectedRoutes:routes.filter(r=>r.mode===mode).map(r=>r.id); const visible=vehicles.filter(v=>activeRoutes.includes(v.routeId)&&v.mode===mode); return (<div className="grid grid-cols-1 xl:grid-cols-4 gap-4"><div className="xl:col-span-3 rounded-2xl overflow-hidden border border-ink-200 shadow-soft bg-white"><MapContainer center={DALLAS} zoom={12} style={{height:600,width:"100%"}}><TileLayer attribution="&copy; OpenStreetMap contributors" url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"/>{polylines.filter(p=>activeRoutes.includes(p.routeId)).map((p,idx)=>(<Polyline key={idx} positions={p.points} pathOptions={{color:"#6b7280",weight:3,opacity:.6}}/>))}{visible.map(v=>(<CircleMarker key={v.id} center={[v.lat,v.lng]} radius={7} pathOptions={{color:statusColor(v.status),fillOpacity:.9}}><Tooltip direction="top" offset={[0,-8]}><div className="text-xs"><div><b>{v.label}</b> â€¢ {v.routeShort}</div><div>Status: {v.status}</div><div>Last seen {v.lastSeen}m ago</div></div></Tooltip></CircleMarker>))}</MapContainer></div><div className="space-y-4"><div className="rounded-2xl bg-white border border-ink-200 p-4 shadow-soft"><h3 className="text-sm font-medium mb-2">Real Time Stats</h3><ul className="text-sm space-y-1"><li className="flex items-center justify-between"><span>Active vehicles</span><b>{visible.length}</b></li><li className="flex items-center justify-between"><span>On time</span><b className="text-success">{visible.filter(v=>v.status==="on-time").length}</b></li><li className="flex items-center justify-between"><span>Late</span><b className="text-warn">{visible.filter(v=>v.status==="late").length}</b></li><li className="flex items-center justify-between"><span>Off route</span><b className="text-danger">{visible.filter(v=>v.status==="off-route").length}</b></li></ul></div></div></div>); }
